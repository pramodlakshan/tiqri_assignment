{
	"name": "AdventureWorksPipeline",
	"properties": {
		"activities": [
			{
				"name": "LookupOldWaterMarkActivitySalesOrderDetail",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "SalesOrderWatermarkDS",
						"type": "DatasetReference"
					},
					"firstRowOnly": true
				}
			},
			{
				"name": "LookupNewWaterMarkActivitySalesOrderDetail",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": "select MAX(ModifiedDate) as NewWatermarkvalue from Sales.SalesOrderDetail",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "SalesOrderWatermarkDS",
						"type": "DatasetReference"
					},
					"firstRowOnly": true
				}
			},
			{
				"name": "DataCopytoSalesOrderDetail",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "LookupNewWaterMarkActivitySalesOrderDetail",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "LookupOldWaterMarkActivitySalesOrderDetail",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": {
							"value": "SELECT\nSH.SalesOrderID AS SalesOrderID,\nSD.ProductID AS ProductKey,\nSH.TerritoryID AS TerritoryKey,\nSH.OrderDate AS OrderDate,\nCONVERT(INT, CONVERT(VARCHAR(8),SH.OrderDate,112)) AS SalesOrderDateKey,\nCONVERT(INT, CONVERT(VARCHAR(8),SH.DueDate,112)) AS SalesOrderDueDateKey,\nSD.OrderQty,\nSD.UnitPrice,\nSD.UnitPriceDiscount,\nSD.LineTotal,\nSH.SubTotal AS SalesOrderSubTotal,\nSD.ModifiedDate AS SalesOrderDetailModifiedTs,\nSH.ModifiedDate AS SalesOrderDateModifiedTs,\nCURRENT_TIMESTAMP AS PipelineUpdateTs\nFROM Sales.SalesOrderDetail SD\n\tLEFT JOIN Sales.SalesOrderHeader SH ON SD.SalesOrderID = SH.SalesOrderID\nWHERE SD.ModifiedDate > '@{activity('LookupOldWaterMarkActivitySalesOrderDetail').output.firstRow.LastRunCheckpoint}' and SD.ModifiedDate <= '@{activity('LookupNewWaterMarkActivitySalesOrderDetail').output.firstRow.NewWatermarkvalue}'\n",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings",
							"copyBehavior": "FlattenHierarchy"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".csv"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "AdventureWorksSourceDS",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "SalesOrderDetailsDS",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "Update-SalesOrderDetailCheackPointTable",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "DataCopytoSalesOrderDetail",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[usp_write_watermark_SalesOrderDetail]",
					"storedProcedureParameters": {
						"ModifiedDate": {
							"value": {
								"value": "@{activity('LookupNewWaterMarkActivitySalesOrderDetail').output.firstRow.NewWatermarkvalue}",
								"type": "Expression"
							},
							"type": "DateTime"
						},
						"TableName": {
							"value": {
								"value": "@{activity('LookupOldWaterMarkActivitySalesOrderDetail').output.firstRow.TableName}",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "AdvntureWorkSource_LS",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "LookupOldWaterMarkActivityTerritory",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "TerritoryWatermarkDS",
						"type": "DatasetReference"
					},
					"firstRowOnly": true
				}
			},
			{
				"name": "LookupNewWaterMarkActivityTerritory",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": "select MAX(ModifiedDate) as NewWatermarkvalue from Sales.SalesTerritory",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "AdventureWorksSourceDS",
						"type": "DatasetReference"
					},
					"firstRowOnly": true
				}
			},
			{
				"name": "DataCopytoTerritory",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "LookupOldWaterMarkActivityTerritory",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "LookupNewWaterMarkActivityTerritory",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": {
							"value": "SELECT\nName AS Territory,\nCountryRegionCode AS CountryRegionCode,\nModifiedDate AS SalesTerritoryModifiedDateTs,\nCURRENT_TIMESTAMP AS PipelineUpdateTs,\nROW_NUMBER() OVER (ORDER BY TerritoryID) AS TerritoryKey\nFROM Sales.SalesTerritory\nWHERE ModifiedDate > '@{activity('LookupOldWaterMarkActivityTerritory').output.firstRow.LastRunCheckpoint}' and ModifiedDate <= '@{activity('LookupNewWaterMarkActivityTerritory').output.firstRow.NewWatermarkvalue}'\n",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings",
							"copyBehavior": "FlattenHierarchy"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".csv"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "AdventureWorksSourceDS",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "SalesTerritoryDetailsDS",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "Update-TerritoryCheackPointTable",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "DataCopytoTerritory",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[usp_write_watermark]",
					"storedProcedureParameters": {
						"ModifiedDate": {
							"value": {
								"value": "@{activity('LookupNewWaterMarkActivityTerritory').output.firstRow.NewWatermarkvalue}",
								"type": "Expression"
							},
							"type": "DateTime"
						},
						"TableName": {
							"value": {
								"value": "@{activity('LookupOldWaterMarkActivityTerritory').output.firstRow.TableName}",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "AdvntureWorkSource_LS",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "LookupOldWaterMarkActivityProduct",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "ProductWatermarkDS",
						"type": "DatasetReference"
					},
					"firstRowOnly": true
				}
			},
			{
				"name": "LookupNewWaterMarkActivityProduct",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": "select MAX(ModifiedDate) as NewWatermarkvalue from Production.Product",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "AdventureWorksSourceDS",
						"type": "DatasetReference"
					},
					"firstRowOnly": true
				}
			},
			{
				"name": "DataCopytoProduct",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "LookupOldWaterMarkActivityProduct",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "LookupNewWaterMarkActivityProduct",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": {
							"value": "SELECT\nP.ProductID AS ProductID,\nP.[Name] AS ProductName,\nISNULL(PC.[Name],'Other') AS ProductCategory,\nISNULL(PSC.[Name],'Miscellaneous') AS ProductSubCategory,\nP.ProductNumber AS ProductNumber,\nP.SafetyStockLevel AS SafetyStockLevel,\nP.StandardCost AS StandardCost,\nP.ListPrice AS ListPrice,\nP.ModifiedDate AS ProductModifiedTs,\nPC.ModifiedDate AS ProductCategoryModifiedTs,\nPSC.ModifiedDate AS ProductSubcategoryModifiedTs,\nCURRENT_TIMESTAMP AS PipelineUpdateTs\nFROM Production.Product P\nLEFT JOIN Production.ProductSubcategory PSC ON P.ProductSubcategoryID = PSC.ProductSubcategoryID\nLEFT JOIN Production.ProductCategory PC ON PSC.ProductCategoryID = PC.ProductCategoryID\nWHERE P.ModifiedDate > '@{activity('LookupOldWaterMarkActivityProduct').output.firstRow.LastRunCheckpoint}' and P.ModifiedDate <= '@{activity('LookupNewWaterMarkActivityProduct').output.firstRow.NewWatermarkvalue}'\nOR PC.ModifiedDate > '@{activity('LookupOldWaterMarkActivityProduct').output.firstRow.LastRunCheckpoint}' and PC.ModifiedDate <= '@{activity('LookupNewWaterMarkActivityProduct').output.firstRow.NewWatermarkvalue}'\nOR PSC.ModifiedDate > '@{activity('LookupOldWaterMarkActivityProduct').output.firstRow.LastRunCheckpoint}' and PSC.ModifiedDate <= '@{activity('LookupNewWaterMarkActivityProduct').output.firstRow.NewWatermarkvalue}'\n",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings",
							"copyBehavior": "FlattenHierarchy"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".csv"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "AdventureWorksSourceDS",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "ProductDetailsDS",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "Update-ProductCheackPointTable",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "DataCopytoProduct",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[usp_write_watermark_product]",
					"storedProcedureParameters": {
						"ModifiedDate": {
							"value": {
								"value": "@{activity('LookupNewWaterMarkActivityProduct').output.firstRow.NewWatermarkvalue}",
								"type": "Expression"
							},
							"type": "DateTime"
						},
						"TableName": {
							"value": {
								"value": "@{activity('LookupOldWaterMarkActivityProduct').output.firstRow.TableName}",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "AdvntureWorkSource_LS",
					"type": "LinkedServiceReference"
				}
			}
		],
		"annotations": []
	}
}